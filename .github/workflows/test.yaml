name: Test
on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  REPORT_DIR: /tmp/build-report

jobs:
  test-action:
    name: Test action
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 18
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
        remove-android:
          - 'true'
          - 'false'
        remove-dotnet:
          - 'true'
          - 'false'
        remove-haskell:
          - 'true'
          - 'false'
        remove-php:
          - 'true'
          - 'false'
        remove-cloud-tools:
          - 'true'
          - 'false'
        remove-dotnet-deb:
          - 'true'
          - 'false'

    steps:
      - name: Determine free space before
        run: |
          echo "FREE_MIM_BEFORE=$(df --output=avail --sync -BM "${{ github.workspace }}" | tail -1 | sed 's/[^0-9]*//g')" >> $GITHUB_ENV

      - name: Check out Maximize Build Space action
        uses: actions/checkout@v2
        with:
          path: ./.github/actions/maximize-test
      
      - name: List installed package
        run: |
          apt list | grep installed

      - name: List space used
        run: |
          du -m "${{ github.workspace }}"

      - name: Maximize build space
        uses: ./.github/actions/maximize-test
        with:
          remove-android:  ${{ matrix.remove-android }}
          remove-dotnet:   ${{ matrix.remove-dotnet }}
          remove-haskell:  ${{ matrix.remove-haskell }}
          remove-php: ${{ matrix.remove-php }}
          remove-cloud-tools: ${{ matrix.remove-cloud-tools }}
          remove-dotnet-deb: ${{ matrix.remove-dotnet-deb }}

      - name: Determine free space after
        run: |
          echo "FREE_MIM_AFTER=$(df --output=avail --sync -BM "${{ github.workspace }}" | tail -1 | sed 's/[^0-9]*//g')" >> $GITHUB_ENV

      - name: Calculate freed space
        run: |
          REPORT_FILENAME_BASE="${REPORT_DIR}/${{ matrix.os }}_${{ matrix.remove-android }}_${{ matrix.remove-dotnet }}_${{ matrix.remove-haskell }}_${{ matrix.remove-php }}_${{ matrix.remove-cloud-tools }}_${{ matrix.remove-dotnet-deb }}"
          FREED_MIM=$(expr ${FREE_MIM_AFTER} - ${FREE_MIM_BEFORE})

          echo "Free space before: ${FREE_MIM_BEFORE}M"
          echo "Free space after : ${FREE_MIM_AFTER}M"
          echo "Space freed      : ${FREED_MIM}M"

          mkdir -p "${REPORT_DIR}"

          REMOVE_ANDROID="${{ matrix.remove-android }}"
          REMOVE_DOTNET="${{ matrix.remove-dotnet }}"
          REMOVE_HASKELL="${{ matrix.remove-haskell }}"
          REMOVE_PHP="${{ matrix.remove-php }}"
          REMOVE_CLOUD_TOOLS="${{ matrix.remove-cloud-tools }}"
          REMOVE_DOTNET_DEB="${{ matrix.remove-dotnet-deb }}"

          cat <<EOF > "${REPORT_FILENAME_BASE}.json"
            {
              "os":                "${{ matrix.os }}",
              "remove_android":    "${REMOVE_ANDROID}",
              "remove_dotnet":     "${REMOVE_DOTNET}",
              "remove_haskell":    "${REMOVE_HASKELL}",
              "remove_php":        "${REMOVE_PHP}",
              "remove_cloud_tools":"${REMOVE_CLOUD_TOOLS}",
              "remove_dotnet_deb": "${REMOVE_DOTNET_DEB}",
              "space_free_before": "${FREE_MIM_BEFORE}",
              "space_free_after":  "${FREE_MIM_AFTER}",
              "space_freed":       "${FREED_MIM}"
            }
          EOF
          jq -r '[.os, .remove_android, .remove_dotnet, .remove_haskell, .remove_php, .remove_cloud_tools, .remove_dotnet_deb, .space_freed, .space_free_after] | join(",")' < "${REPORT_FILENAME_BASE}.json" >> "${REPORT_FILENAME_BASE}.txt"

      - name: Upload disk space report
        uses: actions/upload-artifact@v2
        with:
          name: disk-space-report-single
          path: ${{ env.REPORT_DIR }}

  collect-reports:
    name: Collect reports
    runs-on: ubuntu-latest
    needs: test-action
    env:
      REPORT_FILE: space-free-report.csv

    steps:
      - name: Download single reports
        uses: actions/download-artifact@v2
        with:
          name: disk-space-report-single
          path: ${{ env.REPORT_DIR }}

      - name: Join Csv report
        run: |
          echo 'OS,Android SDKs removed,.NET SDKs removed,Haskell removed,Php removed,cloud tools removed,dotnet deb removed,MB freed,MB free' > "${REPORT_DIR}/${REPORT_FILE}"
          cat ${REPORT_DIR}/*.txt >> "${REPORT_DIR}/${REPORT_FILE}"

      - name: Upload collected report
        uses: actions/upload-artifact@v2
        with:
          name: disk-space-report-markdown
          path: ${{ env.REPORT_DIR }}/${{ env.REPORT_FILE }}

      - name: Checkout report branch
        uses: actions/checkout@v2
        with:
          ref: test-report

      - name: Overwrite old report
        run: |
          cp README.md.template README.md
          cat ${{ env.REPORT_DIR }}/${{ env.REPORT_FILE }} >> README.md

          cat "${REPORT_DIR}/${REPORT_FILE}"

          git config user.name github-actions
          git config user.email github-actions@github.com
          git add README.md
          git commit -m "Generated new report" && git push || echo "Report unchanged, not updating."
